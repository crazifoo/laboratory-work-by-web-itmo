# ================================
# = JWT / CONFIG
# ================================
# The secret key for generating a new token
spring.jwt.authorization.secret-key=TsxXMHbzm7zFUHmPcwAUeGTuzV4WY2ju4G4GZ5RbMfthNqHBwTmArQEPBknbWhgC
# Request header name and prefix
spring.jwt.authorization.request-header=Authorization
spring.jwt.authorization.token-prefix=Bearer:
# Token expiration milliseconds
spring.jwt.authorization.expiration-millis=43200000
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orbis
spring.datasource.username=******
spring.datasource.password=******
spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
# Show or not log for each sql query
spring.jpa.show-sql=true
# ================================
# = SPRING PROPERTIES
# ================================
# Server http port
server.port=3000
